# Problem 2- Even Fibonacci numbers
# https://projecteuler.net/problem=2
# Answer = 4613732

def question():
    print("""
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
    """)


# First Solution
def fibonacci(num):
    a = 1
    b = 1
    fib_list = []
    c = 0
    while c < num:
        fib_list.append(b)
        c = a+b
        a = b
        b = c
    return(sum([i for i in fib_list if i % 2 == 0]))


# Second Solution
def fibonacci2(num):
    fib_numbers = [1, 2]
    while fib_numbers[-1] < num:
        fib_numbers.append(fib_numbers[-1] + fib_numbers[-2])
    del fib_numbers[-1]
    return(sum([i for i in fib_numbers if i % 2 == 0]))


def main():
    question()
    print(f"The answer to the first method is {fibonacci(4000000)}")
    print(f"The answer to second solution is {fibonacci2(4000000)}")


main()
